#version 450

layout (binding = 0) uniform ParameterUBO {
    float deltaTime;
} ubo;

struct Particle {
    vec4 position;
    vec4 velocity;
    vec4 color;
};

layout(std140, binding = 1) readonly buffer ParticleSSBOIn {
    Particle particlesIn[8192];
} in_particles;

layout(std140, binding = 2) buffer ParticleSSBOOut {
    Particle particlesOut[8192];
} out_particles;

layout (local_size_x = 256, local_size_y = 1, local_size_z = 1) in;

void main()
{
    uint index = gl_GlobalInvocationID.x;

    Particle particleIn = in_particles.particlesIn[index];

    out_particles.particlesOut[index].position = particleIn.position + particleIn.velocity * ubo.deltaTime;
    out_particles.particlesOut[index].velocity = particleIn.velocity;

}