[2024-05-23 20:04:29.080] [error] VL: Validation Error: [ UNASSIGNED-CoreValidation-DrawState-InvalidRenderpass ] Object 0: handle = 0x16c84a74830, type = VK_OBJECT_TYPE_COMMAND_BUFFER; | MessageID = 0xa1662b9 | You cannot start a render pass using a framebuffer with a different number of attachments.
[2024-05-23 20:04:29.081] [error] VL: Validation Error: [ VUID-vkCmdBeginRenderPass-initialLayout-01758 ] Object 0: handle = 0xa2eb680000000026, type = VK_OBJECT_TYPE_IMAGE; Object 1: handle = 0x89e60f0000000042, type = VK_OBJECT_TYPE_RENDER_PASS; Object 2: handle = 0x603cd90000000044, type = VK_OBJECT_TYPE_FRAMEBUFFER; Object 3: handle = 0x3fbcd60000000028, type = VK_OBJECT_TYPE_IMAGE_VIEW; | MessageID = 0x4c23393e | vkCmdBeginRenderPass(): Layout/usage mismatch for attachment 0 in VkRenderPass 0x89e60f0000000042[] - the final layout is VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL but the image attached to VkFramebuffer 0x603cd90000000044[] via VkImageView 0x3fbcd60000000028[] was not created with VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT The Vulkan spec states: If any of the initialLayout or finalLayout member of the VkAttachmentDescription structures or the layout member of the VkAttachmentReference structures specified when creating the render pass specified in the renderPass member of pRenderPassBegin is VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL, VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL, VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL, or VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL then the corresponding attachment image view of the framebuffer specified in the framebuffer member of pRenderPassBegin must have been created with a usage value including VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-vkCmdBeginRenderPass-initialLayout-01758)
[2024-05-23 20:04:29.081] [error] VL: Validation Error: [ VUID-vkCmdBeginRenderPass-initialLayout-01758 ] Object 0: handle = 0xa2eb680000000026, type = VK_OBJECT_TYPE_IMAGE; Object 1: handle = 0x89e60f0000000042, type = VK_OBJECT_TYPE_RENDER_PASS; Object 2: handle = 0x603cd90000000044, type = VK_OBJECT_TYPE_FRAMEBUFFER; Object 3: handle = 0x3fbcd60000000028, type = VK_OBJECT_TYPE_IMAGE_VIEW; | MessageID = 0x4c23393e | vkCmdBeginRenderPass(): Layout/usage mismatch for attachment 0 in VkRenderPass 0x89e60f0000000042[] - the input attachment layout is VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL but the image attached to VkFramebuffer 0x603cd90000000044[] via VkImageView 0x3fbcd60000000028[] was not created with VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT The Vulkan spec states: If any of the initialLayout or finalLayout member of the VkAttachmentDescription structures or the layout member of the VkAttachmentReference structures specified when creating the render pass specified in the renderPass member of pRenderPassBegin is VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL, VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL, VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL, or VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL then the corresponding attachment image view of the framebuffer specified in the framebuffer member of pRenderPassBegin must have been created with a usage value including VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-vkCmdBeginRenderPass-initialLayout-01758)
[2024-05-23 20:04:29.081] [error] VL: Validation Error: [ VUID-VkDescriptorImageInfo-imageLayout-00344 ] Object 0: handle = 0x16c84a74830, type = VK_OBJECT_TYPE_COMMAND_BUFFER; | MessageID = 0xde55a405 | vkCmdDrawIndexed: Cannot use VkImage 0xa2eb680000000026[] (layer=0 mip=0) with specific layout VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL that doesn't match the previous known layout VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL. The Vulkan spec states: imageLayout must match the actual VkImageLayout of each subresource accessible from imageView at the time this descriptor is accessed as defined by the image layout matching rules (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-VkDescriptorImageInfo-imageLayout-00344)
[2024-05-23 20:04:29.082] [error] VL: Validation Error: [ VUID-vkCmdDrawIndexed-None-02699 ] Object 0: handle = 0x84785e00000001b9, type = VK_OBJECT_TYPE_DESCRIPTOR_SET; | MessageID = 0xa44449d4 | Descriptor set VkDescriptorSet 0x84785e00000001b9[] encountered the following validation error at vkCmdDrawIndexed time: Image layout specified at vkUpdateDescriptorSet* or vkCmdPushDescriptorSet* time doesn't match actual image layout at time descriptor is used. See previous error callback for specific details. The Vulkan spec states: Descriptors in each bound descriptor set, specified via vkCmdBindDescriptorSets, must be valid if they are statically used by the VkPipeline bound to the pipeline bind point used by this command (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-vkCmdDrawIndexed-None-02699)
[2024-05-23 20:04:29.082] [error] VL: Validation Error: [ UNASSIGNED-CoreValidation-DrawState-InvalidImageLayout ] Object 0: handle = 0x16c84a13180, type = VK_OBJECT_TYPE_COMMAND_BUFFER; | MessageID = 0x4dae5635 | vkQueueSubmit(): pSubmits[0].pCommandBuffers[0] command buffer VkCommandBuffer 0x16c84a13180[] expects VkImage 0xba7514000000002a[] (subresource: aspectMask 0x1 array layer 0, mip level 0) to be in layout VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL--instead, current layout is VK_IMAGE_LAYOUT_UNDEFINED.
[2024-05-23 20:04:29.082] [error] VL: Validation Error: [ UNASSIGNED-CoreValidation-DrawState-InvalidImageLayout ] Object 0: handle = 0x16c84a13180, type = VK_OBJECT_TYPE_COMMAND_BUFFER; | MessageID = 0x4dae5635 | vkQueueSubmit(): pSubmits[0].pCommandBuffers[0] command buffer VkCommandBuffer 0x16c84a13180[] expects VkImage 0x4fac1c0000000032[] (subresource: aspectMask 0x1 array layer 0, mip level 0) to be in layout VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL--instead, current layout is VK_IMAGE_LAYOUT_UNDEFINED.
[2024-05-23 20:04:29.082] [error] Failed to submit draw command buffer!
Failed to submit draw command buffer!
[2024-05-23 20:04:29.083] [error] VL: Validation Error: [ VUID-vkQueuePresentKHR-pWaitSemaphores-03268 ] Object 0: handle = 0x16c84524000, type = VK_OBJECT_TYPE_QUEUE; Object 1: handle = 0xdd3a8a0000000015, type = VK_OBJECT_TYPE_SEMAPHORE; | MessageID = 0x251f8f7a | vkQueuePresentKHR: Queue VkQueue 0x16c84524000[] is waiting on pWaitSemaphores[0] (VkSemaphore 0xdd3a8a0000000015[]) that has no way to be signaled. The Vulkan spec states: All elements of the pWaitSemaphores member of pPresentInfo must reference a semaphore signal operation that has been submitted for execution and any semaphore signal operations on which it depends (if any) must have also been submitted for execution (https://vulkan.lunarg.com/doc/view/1.3.216.0/windows/1.3-extensions/vkspec.html#VUID-vkQueuePresentKHR-pWaitSemaphores-03268)